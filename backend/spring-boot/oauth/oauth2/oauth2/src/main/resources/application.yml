server:
  port: 9000
  #forward-headers-strategy: framework  # docker swagger proxy

  servlet:
    session:
      timeout: 86400s  # 86400초 = 1일 (24시간)

springdoc:
  swagger-ui:
    path: /docs
    oauth2-redirect-url: false
    enable: true  # Swagger UI

spring:
  application:
    name: oauth_client
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

    properties:
      hibernate:
        show_sql: true
        format_sql: true


  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: AdW3oSJzkVBOScg8OywV
            client-secret: Z09d3N6o3m
            redirect-uri: "https://l.0neteam.co.kr/oauth2/callback/naver"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: email
          kakao:
            client-id: 907cfa46035548512b60aa03c5982f3c
            client-secret: m67A99IqZuH1HbdmHRm5wbtPDhbRbOSB
            #redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            redirect-uri: "https://l.0neteam.co.kr/oauth2/callback/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image
          google:
            client-id: 625733066420-sng7p39el6vruh7lmansi2pq8e61th5q.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "https://l.0neteam.co.kr/oauth2/callback/google"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile, email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  servlet:
    multipart:
      maxFileSize: 100MB
      maxRequestSize: 100MB

hosting:
  uri: ${SERVER_DOMAIN}

oauth2:
  authorization-end-point: /oauth2/login
  redirection-end-point: /oauth2/callback/*

logging:
  level:
    org.hibernate.sql: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security.oauth2: DEBUG

rsa:
  public-key: classpath:keys/public.pem
  private-key: classpath:keys/private.pem

